# APP
app.node.env=${NODE_ENV:-production}
app.connection.retry.count:integer=5
app.connection.retry.timeout:integer=3

# MORGAN
morgan.log.format:string[]=[":remote-addr","-",":remote-user",":id","':method :url HTTP/:http-version'",":status",":res[content-length]",":referrer",":user-agent"]

# LOGGER
log.verbose:boolean=false
log.console.level=info
log.file.enable:boolean=false
log.file.level=info
log.file.filename=kafka-ws-logs-%DATE%.log

# Lightship
lightship.detect.kubernetes:boolean=false

# Healtch check
healthcheck.kafka.interval.ms:integer=30000

# TICKET
ticket.secret=0ed6004202bdd3ef04fb
ticket.expiration.sec:integer=60

# REDIS
redis.host=kafka-ws-redis
redis.port:integer=6379
redis.db:integer=1
redis.connect_timeout:integer=3600000
redis.strategy.connect.after:integer=5000
redis.healthcheck.timeout.ms:integer=5000
redis.healthcheck.ms:integer=30000

# KAFKA CONSUMER
consumer.group.id=kafka-ws
consumer.metadata.broker.list=kafka:9092

topic.auto.offset.reset=largest

# SERVER
server.host=0.0.0.0
server.port:integer=8080
server.tls:boolean=false
server.ca=/opt/kafka-ws/certs/ca-cert.pem
server.key=/opt/kafka-ws/certs/server-key.pem
server.cert=/opt/kafka-ws/certs/server-cert.pem
server.jwt.exp.time:boolean=false
server.connection.max.life.time:integer=7200
server.request.cert:boolean:false
server.reject.unauthorized:boolean=true

