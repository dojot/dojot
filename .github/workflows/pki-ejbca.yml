name: Ejbca Wrapper (pki/ejbca)
 
on:
  create:
  push:
    branches-ignore:
      - 'gh-pages'
  pull_request:
    paths:
      - 'pki/ejbca/**'


jobs:
  unit-tests:
    name: Unit Tests
    # if the commit message has ci skip, doest run anything because of needs after
    if: contains(github.event.head_commit.message, 'ci skip')   == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install, build, and test
      run: |
        cd pki/ejbca

        npm ci
        npm run build --if-present
        npm test
    - name: Upload coverage to Codecov 
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: pki/ejbca/coverage/lcov.info
        flags: unittests
        name: jest

  
  docker-hub:
    needs: unit-tests
    name: Build and Publish image to DockerHUb
    runs-on: ubuntu-latest
    # if this a PR doesnt run from here
    if: contains(github.ref, 'refs/pull/') == false 
    steps:
    - name: Owner Repository
      id: get_owner
      run: |
        
        export OWNER=$(echo ${{ github.repository }} | cut -f1 -d"/")
        echo Current Owner is $OWNER
        echo ::set-output name=owner::$OWNER

    - name: Checkout
      uses: actions/checkout@v1

    - name: Build and Push 
      uses: elgohr/Publish-Docker-Github-Action@2.11
      with:
        name: ${{ steps.get_owner.outputs.owner }}/ejbca_wrapper
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: pki/ejbca
        tag_names: true

  gh-pages:
    needs: docker-hub
    name: Generate documentation and Publish in gh-pages
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v1

    - name: Version Doc
      id: version_doc
      env:
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        export TAG_VERSION=$(sh .github/workflows/scripts/translate_docker_tag.sh)

        echo "Documentation Version: "$TAG_VERSION

        echo ::set-output name=version::$TAG_VERSION
    - name: Generate docs
      env:
        FOLDER_TO_GH_PAGES: pki/ejbca
        PATH_APIB: ./pki/ejbca/api-docs/apiary.apib
        VERSION_NAME: ${{ steps.version_doc.outputs.version }}
      run: |
        
        sh .github/workflows/scripts/doc_aglio_api.sh 

    - name: Publish Documentation
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN_PAT }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./build-docs
      with:
        keepFiles: true
        emptyCommits: false
