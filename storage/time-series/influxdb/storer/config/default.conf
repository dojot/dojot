
# General config
delete.device.data.enable:boolean=false
delete.tenant.data.enable:boolean=true
kafka.heathcheck.ms:integer=30000

# Lightship
lightship.detect.kubernetes:boolean=false
# Lightship (milliseconds) waits for Node.js process to exit gracefully after it receives a shutdown signal
lightship.graceful.shutdown.timeout:integer=120000
# Lightship (milliseconds) waits for shutdown handlers
lightship.shutdown.handler.timeout:integer=15000

# Logger config
log.verbose:boolean=false
log.console.level:string=info
log.file:boolean=false
log.file.level:string=info
log.file.filename:string=influxdb-storer-${HOSTNAME:-}-logs-%DATE%.log

# KAFKA CONSUMER config
consumer.client.id:string=${HOSTNAME:-influxdb-storer}
consumer.group.id:string=influxdb-storer
consumer.metadata.broker.list:string=kafka:9092
consumer.topic.metadata.refresh.interval.ms:integer=30000
topic.auto.offset.reset:string=earliest

# SDK Consumer (main object in the SDK Consumer config)
sdk.in.processing.max.messages:integer=10
sdk.queued.max.messages.bytes:integer=10485760
sdk.subscription.backoff.min.ms:integer=1000
sdk.subscription.backoff.max.ms:integer=60000
sdk.subscription.backoff.delta.ms:integer=1000
sdk.commit.interval.ms:integer=5000

#kafka topics suffixes to consumer
subscribe.topics.suffix.device.manager:string=dojot.device-manager.device
subscribe.topics.suffix.device.data:string=device-data
subscribe.topics.suffix.tenants:string=dojot.tenancy

#influx configuration
influx.url:string=http://influxdb:8086
#0 is infinite retention
influx.retention.hrs:integer=168
influx.heathcheck.ms:integer=15000
influx.default.bucket:string=devices
influx.default.token:string=dojot@token_default
influx.default.organization:string=admin
# max number of records to send in a batch
influx.write.options.batch.size:integer=10000
# maximum time in millis to keep points in an unflushed batch (0 means don't periodically flush, only when service is down)
# delay between data flushes in milliseconds, at most `batch size` records are sent during flush
influx.write.options.flush.interval:integer=1
# follow an exponential backoff strategy
influx.write.options.max.retries:integer=3
# maximum delay between retries in milliseconds
influx.write.options.max.retry.delay:integer=15000
# minimum delay between retries in milliseconds
influx.write.options.min.retry.delay:integer=1000
influx.write.options.max.buffer.lines:integer=60000
